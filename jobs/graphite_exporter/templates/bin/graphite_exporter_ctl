#!/usr/bin/env bash

set -eu

RUN_DIR=/var/vcap/sys/run/graphite_exporter
LOG_DIR=/var/vcap/sys/log/graphite_exporter
TMP_DIR=/var/vcap/sys/tmp/graphite_exporter
STORE_DIR=/var/vcap/store/graphite_exporter
mkdir -p ${RUN_DIR} ${LOG_DIR} ${TMP_DIR} ${STORE_DIR}

PIDFILE=${RUN_DIR}/graphite_exporter.pid

source /var/vcap/packages/graphite_exporter/common/utils.sh
exec 1>> ${LOG_DIR}/$(basename "$0").stdout.log
exec 2>> ${LOG_DIR}/$(basename "$0").stderr.log

export PATH=/var/vcap/packages/graphite_exporter/bin:${PATH}

case $1 in
  start)
    pid_guard ${PIDFILE} "graphite_exporter"
    echo $$ > ${PIDFILE}

    ulimit -n 65536

    exec graphite_exporter \
      --graphite.listen-address=":<%= p('graphite_exporter.graphite.port') %>" \
      <% if_p('graphite_exporter.graphite.cache_size') do |cache_size| %> \
      --graphite.cache-size="<%= cache_size %>" \
      <% end %> \
      <% if_p('graphite_exporter.graphite.cache_type') do |cache_type| %> \
      --graphite.cache-type="<%= cache_type %>" \
      <% end %> \
      <% if_p('graphite_exporter.graphite.mapping_config') do %> \
      --graphite.mapping-config="/var/vcap/jobs/graphite_exporter/config/graphite_mapping.yml" \
      <% end %> \
      <% if p('graphite_exporter.graphite.mapping_strict_match') %> \
      --graphite.mapping-strict-match \
      <% end %> \
      <% if_p('graphite_exporter.graphite.sample_expiry') do |sample_expiry| %> \
      --graphite.sample-expiry="<%= sample_expiry %>" \
      <% end %> \
      <% if_p('graphite_exporter.log_format') do |log_format| %> \
      --log.format="<%= log_format %>" \
      <% end %> \
      <% if_p('graphite_exporter.log_level') do |log_level| %> \
      --log.level="<%= log_level %>" \
      <% end %> \
      --web.listen-address=":<%= p('graphite_exporter.web.port') %>" \
      <% if_p('graphite_exporter.web.telemetry_path') do |telemetry_path| %> \
      --web.telemetry-path="<%= telemetry_path %>" \
      <% end %> \
      >>  ${LOG_DIR}/graphite_exporter.stdout.log \
      2>> ${LOG_DIR}/graphite_exporter.stderr.log
    ;;

  stop)
    kill_and_wait ${PIDFILE}
    ;;

  *)
    echo "Usage: $0 {start|stop}"
    exit 1
    ;;

esac
exit 0
